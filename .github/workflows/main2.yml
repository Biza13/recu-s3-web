name: CI/CD a tope

on:
  workflow_dispatch:

jobs:
  despliegue:
    runs-on: ubuntu-latest

    outputs:
      bucket_nombre: ${{ steps.capturar_bucket.outputs.bucket_nombre }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar credenciales aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init
        working-directory: ./archivos-tf

      - name: Terraform apply
        run: terraform apply -auto-approve
        working-directory: ./archivos-tf

      - name: Capturar output de Terraform (Bucket)
        id: capturar_bucket
        run: echo "bucket_nombre=$(terraform output -raw s3)" >> "$GITHUB_OUTPUT"
        working-directory: ./archivos-tf

      - name: Verificar output del bucket
        run: echo "Bucket: ${{ steps.capturar_bucket.outputs.bucket_nombre }}"

  SubirPaginaEstatica:
    needs: despliegue
    runs-on: ubuntu-latest

    steps:
      - name: Checking out code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: "us-east-1"

      - name: Deshabilitar bloqueo de acceso público temporalmente
        run: |
          aws s3api put-public-access-block \
            --bucket ${{ needs.despliegue.outputs.bucket_nombre }} \
            --public-access-block-configuration '{
              "BlockPublicAcls": false,
              "IgnorePublicAcls": false,
              "BlockPublicPolicy": false,
              "RestrictPublicBuckets": false
            }'

      - name: Habilitar el hosting de página web estática
        run: |
          aws s3 website s3://${{ needs.despliegue.outputs.bucket_nombre }} --index-document index.html --error-document 404.html

      - name: Configurar la política de acceso público
        run: |
          aws s3api put-bucket-policy --bucket ${{ needs.despliegue.outputs.bucket_nombre }} --policy '{
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "PublicReadGetObject",
                "Effect": "Allow",
                "Principal": "*",
                "Action": [
                  "s3:GetObject"
                ],
                "Resource": [
                  "arn:aws:s3:::${{ needs.despliegue.outputs.bucket_nombre }}/*"
                ]
              }
            ]
          }'

      - name: Subir a S3 bucket el index
        run: aws s3 cp ./Pagina-Ia-Susana/index.html s3://${{ needs.despliegue.outputs.bucket_nombre }}/index.html

      - name: Subir a S3 bucket la carpeta assets
        run: aws s3 sync ./Pagina-Ia-Susana/assets s3://${{ needs.despliegue.outputs.bucket_nombre }}/assets
